[{"categories":null,"content":"一个技术宅的自留地。本人非IT专业人士，只是个人爱好钻研。 这个网站只是把自己的收获记录下来备忘，也希望能帮助有缘人。 本站记录均为自己搜索实践操作，均非自己原创搜索所得，只是自己加工整理。 如果您也对此感兴趣，我建议你善用google，远离某度。其中原因您一比较即可知道。 如果您对前沿技术感兴趣，一定要用英文搜索，中文的结果往往不正确。 另外，尽可能参照最近的文章也是一个避免犯错的好办法。 最后，要经常备份，切记切记。这方面clonezilla不错。 ","date":"2017-08-20","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"},{"categories":["freebsd"],"content":" 最近把一台T400的操作系统从Archlinux换成freeBSD，发现freeBSD更稳定，资源占用也更低。可能是使用人少的缘故，网上中文资源很少，也不准确。好在英文资料还不少，也很详细，参照安装也不难。下面简要记录自己走过的弯路，下面命令均需root权限。 ","date":"2021-02-24","objectID":"/freebsd/:0:0","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"安装 ","date":"2021-02-24","objectID":"/freebsd/:1:0","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"安装iso选择 由于众所周知的原因，境外freebsd源速度极慢，使用bootonly.iso基本无法安装。我下载使用下载amd64-dvd1.iso来安装，安装过程中无需上网下载。 ","date":"2021-02-24","objectID":"/freebsd/:1:1","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"网络配置 安装完成可配置网络，可以选择配置ipv4、dhcp或手动配置ip。 ","date":"2021-02-24","objectID":"/freebsd/:1:2","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"使用国内源 更换pkg源 编辑/usr/local/etc/pkg/repos/FreeBSD.conf 禁用系统级 pkg 源。 mkdir -p /usr/local/etc/pkg/repos 替换其中url为’url: “pkg+http://mirrors.ustc.edu.cn/freebsd-pkg/${ABI}/latest’ -禁用系统级 pkg 源 mv /etc/pkg/FreeBSD.conf /etc/pkg/FreeBSD.conf.back pkg update -f 更换update源 sed -i '' 's/ServerName update.FreeBSD.org/ServerName update.freebsd.cn/g' /etc/freebsd-update.conf FreeBSD 安全补丁可以通过以下命令下载并安装补丁。 freebsd-update fetch freebsd-update install #安装更新 pkg audit -F #查找所有软件包是否有漏洞补丁（安全审计） freeBSD国内源 ports mirror at ports.freebsd.cn portsnap mirror at portsnap.freebsd.cn update mirror at update.freebsd.cn pkg mirror at pkg.freebsd.cn ","date":"2021-02-24","objectID":"/freebsd/:1:3","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"桌面配置 参照FreeBSD on a Laptop ","date":"2021-02-24","objectID":"/freebsd/:2:0","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"编译使用suckless软件 dmenu、dwm、st、slstatus均可在freeBSD中使用，但需按照以下修改config.mk，以在freeBSD下编译。将X11INC和X11LIB路径中的X11R6改为local，安装pkgconf，pkg install pkfconf，将PKG_CONFIG中pkg-config改为/usr/local/bin/pkgconf。需使用github上LukeSmith修改的st，可以背景透明，显示systray和输入中文。 ","date":"2021-02-24","objectID":"/freebsd/:2:1","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"中文输入 安装zh-fcitx，使用zh-fcitx-configtool配置，但无法配置具体的输入法，直接使用linux下配置。配置文件位置为.config/fcitx。 ","date":"2021-02-24","objectID":"/freebsd/:2:2","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"字体 pkg install wqy-fonts nerd-font xset fp+ /usr/local/share/font/wqy xset rehash ","date":"2021-02-24","objectID":"/freebsd/:2:3","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"其他设置 使用picom背景透明，feh设置壁纸，slim登录。 ","date":"2021-02-24","objectID":"/freebsd/:2:4","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"声音设置 ","date":"2021-02-24","objectID":"/freebsd/:3:0","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"解决声音小问题 安装mixer调整音量，安装sndio mixer 显示各设备音量 ","date":"2021-02-24","objectID":"/freebsd/:3:1","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"设置5.1声音 ","date":"2021-02-24","objectID":"/freebsd/:3:2","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"升级 使用freebsd-update升级FreeBSD操作系统使用freebsd-update升级FreeBSD操作系统。 ","date":"2021-02-24","objectID":"/freebsd/:4:0","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"更新到最新补丁版本 freebsd-update fetch freebsd-update install ","date":"2021-02-24","objectID":"/freebsd/:4:1","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"升级版本 freebsd-update upgrade -r 13.0-BETA3 freebsd-update install ","date":"2021-02-24","objectID":"/freebsd/:4:2","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"重新引导到新内核并继续安装. reboot freebsd-update install ","date":"2021-02-24","objectID":"/freebsd/:4:3","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["freebsd"],"content":"重新构建pkg程序，完成升级 pkg-static upgrade -f ","date":"2021-02-24","objectID":"/freebsd/:4:4","tags":["freebsd"],"title":"Thinkpad T400上安装配置Freebsd 12","uri":"/freebsd/"},{"categories":["food"],"content":" 感觉还是不错的。 ","date":"2020-12-09","objectID":"/food-2/:0:0","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"糖醋排骨 ","date":"2020-12-09","objectID":"/food-2/:1:0","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"食材 排骨、葱、姜、桂皮、4个八角 ","date":"2020-12-09","objectID":"/food-2/:1:1","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"调料 料酒、冰糖、糖、生抽、醋 ","date":"2020-12-09","objectID":"/food-2/:1:2","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"步骤 排骨浸泡冷水30分钟以上，泡出血水。 少许水，小火炒糖色，倒出。 锅内放少许油中火煸炒排骨5分钟。 放入料酒、生抽、姜块、葱段、桂皮、八角煸炒2分钟，沿锅边加入冰糖水，加入开水淹没排骨，大火煮开，转小火煮1个小时。 中火煮20分钟，加入白糖、醋，大火翻炒收汁。 ","date":"2020-12-09","objectID":"/food-2/:1:3","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"东坡肉 ","date":"2020-12-09","objectID":"/food-2/:2:0","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"食材 五花肉、葱、姜 ","date":"2020-12-09","objectID":"/food-2/:2:1","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"调料 料酒、冰糖、糖、生抽 ","date":"2020-12-09","objectID":"/food-2/:2:2","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"步骤 。 。 。 。 ","date":"2020-12-09","objectID":"/food-2/:2:3","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"红烧肉 ","date":"2020-12-09","objectID":"/food-2/:3:0","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"食材 五花肉、葱、姜 ","date":"2020-12-09","objectID":"/food-2/:3:1","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"调料 料酒、冰糖、糖、生抽 ","date":"2020-12-09","objectID":"/food-2/:3:2","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"步骤 。 。 。 。 ","date":"2020-12-09","objectID":"/food-2/:3:3","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"木须肉 ","date":"2020-12-09","objectID":"/food-2/:4:0","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"食材 五花肉、黄花菜、黑木耳、菠菜 ","date":"2020-12-09","objectID":"/food-2/:4:1","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"调料 料酒、冰糖、糖、生抽 ","date":"2020-12-09","objectID":"/food-2/:4:2","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":"步骤 。 。 。 。 ","date":"2020-12-09","objectID":"/food-2/:4:3","tags":["排骨","五花肉"],"title":"我喜欢的菜（二）","uri":"/food-2/"},{"categories":["food"],"content":" 最近喜欢上做饭。觉得中国菜真是一门艺术，各种调料组合、烹饪手法、火候的掌握、食材的选择和时间和长短等等，不足一一而论。川菜、鲁菜、谭家菜、粤菜，各种门派。，做好饭需要时间、耐心，但做好饭最关键的还是爱心，看做的对象是谁。做好饭成就感还是不错的。 ","date":"2020-11-30","objectID":"/food-1/:0:0","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"干煸大虾 ","date":"2020-11-30","objectID":"/food-1/:1:0","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"食材 虾、葱丝、姜丝 ","date":"2020-11-30","objectID":"/food-1/:1:1","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"调料 料酒、6小勺糖、盐、胡椒粉 ","date":"2020-11-30","objectID":"/food-1/:1:2","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"步骤 剪虾，头、尾、脚、须，背部剪开抽出虾线。 煎虾，两面，加水，加料酒、5勺糖、盐、少许胡椒粉。 盖盖煮2分半，加1勺糖，出锅。 葱丝、姜丝、香油，熬汁，浇上。 ","date":"2020-11-30","objectID":"/food-1/:1:3","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"葱爆羊肉 ","date":"2020-11-30","objectID":"/food-1/:2:0","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"食材 羊肉、葱、 ","date":"2020-11-30","objectID":"/food-1/:2:1","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"调料 料酒、酱油、胡椒粉、香油、醋 ","date":"2020-11-30","objectID":"/food-1/:2:2","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"步骤 羊肉剔筋，切小块，加料酒、酱油、胡椒粉、香油，顺着一个方向搅拌匀。 葱切大段 大火、热油，放羊肉爆炒，用筷子搅拌，出锅。 锅放少量油 ，加热，放入大葱翻炒，加酱油、料酒，放羊肉，加醋，出锅。 ","date":"2020-11-30","objectID":"/food-1/:2:3","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"酸辣土豆丝 ","date":"2020-11-30","objectID":"/food-1/:3:0","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"食材 土豆、芹菜、干辣椒、蒜 ","date":"2020-11-30","objectID":"/food-1/:3:1","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"调料 醋、盐 ","date":"2020-11-30","objectID":"/food-1/:3:2","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"步骤 土豆切丝水洗，蒜切块。 热锅，油热，放入蒜，炒出香味，放入辣椒炒。 放入土豆丝，下盐，炒到土豆丝透明后，放醋，放加水稀释黄酱，加少量糖，酱油，香芹。 ","date":"2020-11-30","objectID":"/food-1/:3:3","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"红烧扒皮鱼 ","date":"2020-11-30","objectID":"/food-1/:4:0","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"食材 扒皮鱼、葱段、姜、蒜、干辣椒 ","date":"2020-11-30","objectID":"/food-1/:4:1","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"调料 糖、醋、料酒、酱油、八角、花椒、白糖、胡椒粉 ","date":"2020-11-30","objectID":"/food-1/:4:2","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"步骤 扒皮鱼改刀，入油锅炸，炸干水分，微黄。 锅内加底油，下入姜片、葱段、花椒、八角、大蒜，炒香，放入豆瓣酱，干辣椒，加少量水，讲豆瓣酱炒出红油。 加入适量清水，下入扒皮鱼，淹没扒皮鱼，烧开后加入米酒、酱油，白糖3勺，少许胡椒粉。汤汁粘稠后，加入鸡精、味精，陈醋。大火收汁。 ","date":"2020-11-30","objectID":"/food-1/:4:3","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"萝卜丝鲫鱼汤 ","date":"2020-11-30","objectID":"/food-1/:5:0","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"食材 鲫鱼、白萝卜、海米、葱、姜、香菜 ","date":"2020-11-30","objectID":"/food-1/:5:1","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"调料 盐、花椒 ","date":"2020-11-30","objectID":"/food-1/:5:2","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["food"],"content":"步骤 开水烫鱼头鱼尾，冲凉，刮去表面黑膜，去取鳍。 白萝卜切丝。海米用水洗一下。 锅烧热放油，放入鲫鱼，煎、放入葱姜，加水过鱼、海米，大火炖15到一刻钟，放几粒花椒、放白胡椒，撇去浮沫。 锅热加油，放萝卜丝煸炒，放水、几粒花椒，撇去浮沫。 萝卜丝放入鲫鱼汤中，继续滚，放入盐调味，煮到萝卜丝入口即化，盛入砂锅。 ","date":"2020-11-30","objectID":"/food-1/:5:3","tags":["虾","扒皮鱼","鲫鱼","土豆","羊肉","白萝卜"],"title":"我喜欢的菜（一）","uri":"/food-1/"},{"categories":["linux"],"content":" redshift是linux护眼软件，可以根据你的地理位置，随时间自动调节屏幕屏幕色温，减少蓝光伤害，达到护眼目的。 ","date":"2020-11-11","objectID":"/redshift/:0:0","tags":["redshift","wayland"],"title":"wayland使用redshift护眼程序","uri":"/redshift/"},{"categories":["linux"],"content":"安装redshift-wayland-git 我们需要使用yay安装wayland版本的redshift，缺省的redshift并不适用于wayland。 yay -S redshift-wayland-git ","date":"2020-11-11","objectID":"/redshift/:0:1","tags":["redshift","wayland"],"title":"wayland使用redshift护眼程序","uri":"/redshift/"},{"categories":["linux"],"content":"设置 编辑 .config/redshift/redshift.conf来设置缺省色温、调节方式和位置等。 [redshift] ; 设置白天和晚上的屏幕温度（中性为6500k） ; 在2700K/6300K色温下更容易造成视疲劳 temp-day=5800 temp-night=4500 ; 逐渐增强或降低屏幕的温度，平滑过渡 transition=1 ; 设置位置提供者为manual location-provider=manual ; 设置randr调整方法 adjustment-method=wayland [manual] ; 经纬度 lon= lat= ; 调整屏幕'0',从0开始 [randr] screen=0 ","date":"2020-11-11","objectID":"/redshift/:0:2","tags":["redshift","wayland"],"title":"wayland使用redshift护眼程序","uri":"/redshift/"},{"categories":["linux"],"content":"启动 使用usr方式systemd启动，新建/usr/lib/systemd/user/redshit.service文件。 [Unit] Description=Redshift display colour temperature adjustment Documentation=http://jonls.dk/redshift/ After=graphical-session.target [Service] ExecStart=/usr/bin/redshift Restart=always RestartSec=5 [Install] WantedBy=graphical-session.target 自启动 systemctl --user start redshift.service systemctl --user enable redsfift.service 注意 安装wayland版本redshift-wayland-git 设置redshift的adjustment-method=wayland 使用user方式systemd启动，加入RestartSec=5 ，否则会启动失败。 ","date":"2020-11-11","objectID":"/redshift/:0:3","tags":["redshift","wayland"],"title":"wayland使用redshift护眼程序","uri":"/redshift/"},{"categories":["linux"],"content":" urxvt小巧快速，但缺乏缺省设置，设置起来比较麻烦，但设置好了，还是很好用的，而且只有它通过xwayland使用w3m支持ranger在wayland下中预览图像。 ","date":"2020-11-10","objectID":"/urxvt/:0:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":"fcitx支持 URxvt.preeditType:Root URxvt.inputMethod:fcitx 技巧 一定要安装aur中的urxvt-unicode-truecolor来支持中文和真彩色。 在wayland中，urxvt可通过.Xdefaults设置，以下设置均在其中。 慎用URxvt.letterSpace设置字间距，在我机器上这为不同字体设置带来问题。 ","date":"2020-11-10","objectID":"/urxvt/:1:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":"使用守护进程模式 urxvt可采用守护模式，使用urxvtc启动终端，节省内存，更加快速。这里采用在sway内启动urxvtd守护进程。 exec urvxtd -q -f 注意 推荐sway内启动守护进程，可以采用桌面的语言设置，避免出现乱码。 ","date":"2020-11-10","objectID":"/urxvt/:2:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":"配色 使用Dracula配色 ! Dracula Xresources palette *.foreground: #F8F8F2 *.background: #282A36 *.color0: #000000 *.color8: #4D4D4D *.color1: #FF5555 *.color9: #FF6E67 *.color10: #5AF78E *.color3: #F1FA8C *.color11: #F4F99D *.color4: #BD93F9 *.color12: #CAA9FA *.color5: #FF79C6 *.color13: #FF92D0 *.color6: #8BE9FD *.color14: #9AEDFE *.color7: #BFBFBF *.color15: #E6E6E6 ","date":"2020-11-10","objectID":"/urxvt/:3:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":"背景透明 括号数字内为透明度。 URxvt.background:[80]#282A36 ","date":"2020-11-10","objectID":"/urxvt/:4:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":"复制粘贴 使用linux缺省复制粘贴方式。 !! copy \u0026 paste URxvt.keysym.Shift-Control-V: eval:paste_clipboard URxvt.keysym.Shift-Control-C: eval:selection_to_clipboard URxvt.keysym.Control-Meta-c: builtin-string: URxvt.keysym.Control-Meta-v: builtin-string: URxvt.iso14755: false URxvt.iso14755: false URxvt.iso14755_52: false ","date":"2020-11-10","objectID":"/urxvt/:5:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":"字体设置 我使用的是Hack。 URxvt.font:xft:Hack:style=Regular:antialias=True:pixelsize=23 URxvt.boldFont:xft:Hack:style=Bold:antialias=True:pixelsize=23 技巧 字体名与安装软件包名一般并不一致，多为字体名首字母大写，可多试几次。 不是所有字体在urxvt中都可使用。 如archlnux中Hack字体，安装使用 yay -S ttf-hack 查看字体使用fc-list | grep hack 并无结果。要使用Hack查询，fc-list | grep Hack，结果显示; /usr/share/fonts/TTF/Hack-Italic.ttf: Hack:style=Italic /usr/share/fonts/TTF/Hack-Bold.ttf: Hack:style=Bold /usr/share/fonts/TTF/Hack-Regular.ttf: Hack:style=Regular 系统内字体名为style前名称，即Hack。 ","date":"2020-11-10","objectID":"/urxvt/:6:0","tags":["urxvt","wayland"],"title":"wayland下urxvt使用","uri":"/urxvt/"},{"categories":["linux"],"content":" fcitx是linux下常用的输入法，如何在wayland下使用，网上却缺乏准确的说法。实际上，fcitx在wayland下还是可以使用的，下面是我在wayland下的实践，主要是一些关键要点，以供参考。 ","date":"2020-11-10","objectID":"/fcitx/:0:0","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"安装 这里我们只使用拼音，只需安装fcitx即可，另外为方便设置可安装fcitx-configtool，使用图形界面设置。 sudo pacman -S fcitx fcitx-configtool ","date":"2020-11-10","objectID":"/fcitx/:1:0","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"设置 fcitx在linux下的设置比较繁琐，设置的项目多，稍有不慎，就可能出错，出现问题要逐项进行排查。 ","date":"2020-11-10","objectID":"/fcitx/:2:0","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"fcitx设置 首先打开fcitx-configtool,添加键盘。 首先在[输入法]中选择你要用的输入法，按下面加号添加键盘，放在第一列，英文输入键盘可删除。 在[设置]中选择输入提示字体和大小。 ","date":"2020-11-10","objectID":"/fcitx/:2:1","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"设置环境变量 wayland是在.pam_environment中设置。要设置桌面字体为中文，否则fcitx是无法添加中文输入法的。其次设置GTK、QT和im均使用fcitx输入。 LANG=zh_CN.UTF-8 GTK_IM_MODULE DEFAULT=fcitx QT_IM_MODULE DEFAULT=fcitx XMODIFIERS DEFAULT=\\@im=fcitx ","date":"2020-11-10","objectID":"/fcitx/:2:2","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"urxvt 一定要安装aur中的urxvt-unicode-truecolor来支持中文和真彩色。 在wayland中，urxvt可通过.Xdefaults设置。 URxvt.preeditType:Root URxvt.inputMethod:fcitx 如仍无法切换输入模式可尝试重装fcitx，我的就是\u003e这样解决的，sudo pacman -S fcitx ","date":"2020-11-10","objectID":"/fcitx/:2:3","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"添加自启动 可在sway中设置fcitx自启动。 exec --no-startup-id fcitx -r ","date":"2020-11-10","objectID":"/fcitx/:2:4","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":"系统图标使用 如使用swaybar，我们需要设置系统托盘图标，否则会显示红脸，切换为汉字后无法返回。 查看图标文件 find /usr/share/icons/ -name 'input-keyboard.*' 设置主题 为正确显示图标我们需要在sway设置文件bar部分增加主题设置。 icon_theme Adwaita 注意 如你觉得Adwaita的键盘图标不好看，可安装其他主题，更换图标，也可以仅替换/usr/share/icons/Adwaita/32x32/legacy/input-keyboard.png文件。 ","date":"2020-11-10","objectID":"/fcitx/:3:0","tags":["fcitx","wayland"],"title":"wanland下使用Fcitx输入中文","uri":"/fcitx/"},{"categories":["linux"],"content":" 安装完系统后，你还需要安装基本的软件来方便使用。好在linux下软件众多，得益于开放性和自由免费的理念，你有众多选择，总可以选择适合你的。下面便是我目前使用的软件： ","date":"2020-11-01","objectID":"/soft/:0:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"备份软件 clonezilla是一款linux下优秀的备份软件，基于debian构建，类似ghost,但比ghost更灵活。自身可以启动，支持多种模式备份，即可以整盘备份，也可以按分区备份。可通过ventoy制作启动USB，放入ISO即可。 ","date":"2020-11-01","objectID":"/soft/:1:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"USB启动工具 ventoy是EFI启动模式下制作USB启动盘的工具，与以往不同，它不需要复杂操作，安装后会在USB上建立两个分区，一个用于启动，一个用于放置ISO文件。只需将ISO文件放入特定分区，ventoy会自动识别，加入启动选择。 ","date":"2020-11-01","objectID":"/soft/:2:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"终端 我使用的是urxvt，termite不能在ranger中预览图像。urxvt设置较为繁琐，在wayland下可以使用fcitx，alacritty和kitty均无法使用。网上说alacritty可以，但我怎么设置都不行，只好放弃。 技巧 一定要安装aur中的urxvt-unicode-truecolor来支持中文和真彩色。 在wayland中，urxvt可通过.Xdefaults设置，以下设置均在其中。 慎用URxvt.letterSpace设置字间距，在我机器上这为不同字体设置带来问题。 ","date":"2020-11-01","objectID":"/soft/:3:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"shell shell是fish，相比zsh，开箱即用，支持自动补全，历史记录，很是方便。 oh-my-fish是fish功能拓展，curl -L https://get.oh-my.fish | fish一键安装，可配套使用。 技巧 更换缺省shell chsh /usr/bin/fish oh-my-fish使用omf配置 列出所有安装包omf list。 查看主题omf theme。 安装主题omf install **。 更新 omf update omf 搜索包 omf search **。 移除包 omf remove **。 排错 omf doctor 卸载 omf destroy 显示帮助omf -h ","date":"2020-11-01","objectID":"/soft/:4:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"文本编辑 使用neovim，功能多，更新快。 插件使用vim-plug管理。 .config/vim/init.vim call plug#begin('~/.local/share/nvim/plugged') Plug 'vim-airline/vim-airline' \" Plug 'scrooloose/nerdtree' Plug 'scrooloose/nerdtree' Plug 'morhetz/gruvbox' Plug 'dracula/vim', { 'as': 'dracula' } call plug#end() \"colorscheme gruvbox colorscheme dracula \" autocmd vimenter * NERDTree \"自动开启Nerdtree let g:NERDTreeWinSize = 25 \"设定 NERDTree 视窗大小 let NERDTreeShowBookmarks=1 \" 开启Nerdtree时自动显示Bookmarks \" 打开vim时如果没有文件自动打开NERDTree \" autocmd vimenter * if !argc()|NERDTree|endif \" 当NERDTree为剩下的唯一窗口时自动关闭 autocmd bufenter * if (winnr(\"$\") == 1 \u0026\u0026 exists(\"b:NERDTree\") \u0026\u0026 b:NERDTree.isTabTree()) | q | endif \" 设置树的显示图标 let g:NERDTreeDirArrowExpandable = '+' let g:NERDTreeDirArrowCollapsible = '-' let NERDTreeIgnore = ['\\.pyc$'] \" 过滤所有.pyc文件不显示 let g:NERDTreeShowLineNumbers=0 \" 是否显示行号 let g:NERDTreeHidden=0 \"不显示隐藏文件 \"\"Making it prettier let NERDTreeMinimalUI = 1 let NERDTreeDirArrows = 1 nnoremap \u003cF3\u003e :NERDTreeToggle\u003cCR\u003e \" 开启/关闭nerdtree快捷键 \" set number set termguicolors set background=dark highlight Normal guibg=NONE ctermbg=None \" autocmd vimenter * NERDTree \"自动开启Nerdtree let g:NERDTreeWinSize = 25 \"设定 NERDTree 视窗大小 let NERDTreeShowBookmarks=1 \" 开启Nerdtree时自动显示Bookmarks \"打开vim时如果没有文件自动打开NERDTree \" autocmd vimenter * if !argc()|NERDTree|endif \"当NERDTree为剩下的唯一窗口时自动关闭 autocmd bufenter * if (winnr(\"$\") == 1 \u0026\u0026 exists(\"b:NERDTree\") \u0026\u0026 b:NERDTree.isTabTree()) | q | endif \" 设置树的显示图标 let g:NERDTreeDirArrowExpandable = '+' let g:NERDTreeDirArrowCollapsible = '-' let NERDTreeIgnore = ['\\.pyc$'] \" 过滤所有.pyc文件不显示 let g:NERDTreeShowLineNumbers=0 \" 是否显示行号 let g:NERDTreeHidden=0 \"不显示隐藏文件 \"\"Making it prettier let NERDTreeMinimalUI = 1 let NERDTreeDirArrows = 1 nnoremap \u003cF3\u003e :NERDTreeToggle\u003cCR\u003e \" 开启/关闭nerdtree快捷键 \" set number set termguicolors set background=dark highlight Normal guibg=NONE ctermbg=None ","date":"2020-11-01","objectID":"/soft/:5:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"配色 可以为fish，kitty，neovim均安装使用流行的dracula配色，这方面搜索dracula网站即可，说明很详细。 技巧 neovim颜色可按照vim配置说明操作即可。 ","date":"2020-11-01","objectID":"/soft/:6:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"私有网盘 filebrowser是一款简单、方便的网盘软件，安装只需一个文件。 设置 编辑/etc/filebrowser/filebrowser.json \"port\": 7000, \"noAuth\": false, \"baseurl\":\"/\", \"address\": \"204.15.72.113\", \"alternativeReCaptcha\": false, \"reCaptchaKey\": \"\", \"reCaptchaSecret\": \"\", \"database\": \"/etc/filebrowser/filebrowser.db\", \"log\": \"stdout\", \"plugin\": \"\", \"scope\": \".\", \"allowCommands\": true, \"allowEdit\": true, \"allowNew\": true, \"commands\": [ \"wget\" ] } 自启动 编辑/etc/systemd/system/filebrowser.service [Unit] Description=The filebrowser Process Manager After=network.target [Service] Type=simple ExecStart=/usr/local/bin/filebrowser -c /etc/filebrowser/filebrowser.json ExecStop=/bin/killall filebrowser PrivateTmp=true [Install] WantedBy=multi-user.target 文件目录根设置 登录后，点击[设置]-\u003e[全局设置]-\u003e[用户默认设置]，将[目录范围]改为你想要的文件夹。 ","date":"2020-11-01","objectID":"/soft/:7:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"frp内网穿透 我们的宽带一般是没有公网地址的，为了能访问家中的nas服务器，需要安装内网穿透软件frp。 自启动 编辑/etc/systemd/system/frps.service。 [Unit] Description=Frp Server Service After=network.target [Service] Type=simple User=nobody Restart=on-failure RestartSec=5s ExecStart=/usr/bin/frps -c /etc/frps/frps.ini [Install] WantedBy=multi-user.target 设置 编辑/etc/frps/frps.ini。 # [common] is integral section [common] # A literal address or host name for IPv6 must be enclosed # in square brackets, as in \"[::1]:80\", \"[ipv6-host]:http\" or \"[ipv6-host%zone]:80\" bind_addr = 0.0.0.0 bind_port = 5500 # udp port to help make udp hole to penetrate nat #bind_udp_port = # udp port used for kcp protocol, it can be same with 'bind_port' # if not set, kcp is disabled in frps #kcp_bind_port = # specify which address proxy will listen for, default value is same with bind_addr # proxy_bind_addr = 127.0.0.1 # if you want to support virtual host, you must set the http port for listening (optional) # Note: http port and https port can be same with bind_port vhost_http_port = 8080 vhost_https_port = 4433 # set dashboard_addr and dashboard_port to view dashboard of frps # dashboard_addr's default value is same with bind_addr # dashboard is available only if dashboard_port is set dashboard_addr = 0.0.0.0 dashboard_port = 6443 # dashboard user and passwd for basic auth protect, if not set, both default value is admin dashboard_user = dashboard_pwd = # AuthenticationMethod specifies what authentication method to use authenticate frpc with frps. # If \"token\" is specified - token will be read into login message. # If \"oidc\" is specified - OIDC (Open ID Connect) token will be issued using OIDC settings. By default, this value is \"token\". authentication_method = token # auth token token = # if subdomain_host is not empty, you can set subdomain when type is http or https in frpc's configure file # when subdomain is test, the host used by routing is test.frps.com subdomain_host = frps.com ","date":"2020-11-01","objectID":"/soft/:8:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":"字体设置 中文字体我安装了免费的文泉驿正黑、文泉驿微米黑、方正书宋;英文终端字体选择了Hack。字体大多可通过yay自动安装，方正书宋选择下载后手动安装。archlinux中文设置已比较成熟，我仅在chrome和urxvt中自定义了字体。chrome在设置中设置自定义字体，标准字体为方正书宋，Serif 字体为方正书宋，Sans-serif 字体为文泉驿微米黑，宽度固定的字体为文泉驿等宽微米黑。urxvt使用Hack字体，具体见urvxt设置部分。 字体手动安装 将欲安装字体拷入/usr/share/fonts目录中，运行fv-cache完成安装。 sudo cp 字体.ttf /usr/share/fonts/字体.ttf sudo fv-cache -v -f 查看已安装字体 fc-list | grep 字体名 ","date":"2020-11-01","objectID":"/soft/:9:0","tags":["software"],"title":"linux常用软件","uri":"/soft/"},{"categories":["linux"],"content":" hp gen8是微型4盘位的服务器，比较适合做NAS。自己也海淘了一台，升级了CPU(1265v2)和内存(16M)，安装了Proxmox虚拟机，虚拟机内安装了windows server 2019,synology,centos 7,还是很稳定的。 ","date":"2020-11-01","objectID":"/gen8-1/:0:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"ilo静态ip地址设置 ilo是gen8的特色，方便服务器远程管理，无需连接显示器核键盘。使用自动获取ip，每次连接很不方便，可以为设置静态地址方便连接。目前我安装的ilo版本是2.75，支持使用html5远程控制管理，比较方便。 ","date":"2020-11-01","objectID":"/gen8-1/:1:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"启动设置 常规可以在启动时按F9进入ilo设置界面内设置。 ","date":"2020-11-01","objectID":"/gen8-1/:1:1","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"linux内设置 如你的机器上已安装linux，也可用过ipmitool设置。ipmi是ibm发起的一个服务器设置协议，可以通过命令界面进行服务器的一些原需在BIOS中进行的一些设置。 首先查找网卡位置 for i in `seq 1 14`; do ipmitool lan print $i 2\u003e/dev/null | grep -q ^Set \u0026\u0026 echo Channel $i; done Channel 2 查看现有设置 ipmitool lan print 2 Set in Progress : Set Complete Auth Type Support : IP Address Source : DHCP Address IP Address : 0.0.0.0 Subnet Mask : 0.0.0.0 MAC Address : c0:ff:ee:c0:ff:ee BMC ARP Control : ARP Responses Enabled, Gratuitous ARP Disabled Default Gateway IP : 0.0.0.0 802.1q VLAN ID : Disabled 802.1q VLAN Priority : 0 Cipher Suite Priv Max : Not Available 设置静态网址 ipmitool lan set 2 ipsrc static ipmitool lan set 2 ipaddr 192.168.50.36 ipmitool lan set 2 netmask 255.255.255.0 ipmitool lan set 2 defgw ipaddr 192.168.50.1 ipmitool mc reset cold ","date":"2020-11-01","objectID":"/gen8-1/:1:2","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"升级BIOS HP gen8的很多设着都可以在ilo下操作，升级BIOS也可以在ilo固件下进行，直接上传BIOS镜像即可，我使用的是2019年4月4日的。当然也可以制作usb来升级，不过没有ilo方便。另外gen8为了安全期间，有两个BIOS，一个备份，一个使用，正常升级只升级备份，没有问题的话，需要我们在BIOS手动交换来永久使用。 具体操作可上网搜索。 ","date":"2020-11-01","objectID":"/gen8-1/:2:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"使用SPP升级系统 HP gen8可定期通过SPP升级系统，不过HP网站过质保期后就无法下载，我们可以搜索热心网友分享的下载。 技巧 最新SPP下载地址：https://technet24.ir/%D8%AF%D8%A7%D9%86%D9%84%D9%88%D8%AF-%D8%B3%D8%B1%D9%88%DB%8C%D8%B3-%D9%BE%DA%A9-hpe-service-pack-for-proliant-9872 远程在ilo界面左上角选择CDROM图标挂载SPPiso镜像 重新启动按F1选择CD-ROM启动。 选择第一项自动安装，否则升级可能会出现问题。 ","date":"2020-11-01","objectID":"/gen8-1/:3:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"proxmox proxmox 是一款免费虚拟机软件，基于debian，使用qemu，lxc虚拟化。提供专门的管理页面（端口8006）来建立管理虚拟机，支持集群，功能强大，我仅使用了它最基础的功能。 技巧 安装很简单，使用ilo远程服务台挂载安装ISO，选择CDROM启动即可。proxmox占用空间很小，可直接安装到gen8内置的SD或USB盘上，可以省去一个硬盘接口。 选择网卡时，一定要选择好，否则启动后无法连接控制台，解决也很简单，交换网线口即可。 ","date":"2020-11-01","objectID":"/gen8-1/:4:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"synology 群辉是比较常用的NAS它的软件是基于linux开发，功能强大，使用模块化管理，拓展性强，稳定性高。我安装了一个它的破解后的虚拟机，主要用作NAS和照片管理。 最新资源在xpenology上可以找到。 ","date":"2020-11-01","objectID":"/gen8-1/:5:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":"软路由 常见的pc软路由软件有openwart，ros，voxy，其中lede是基于openwrt整合了较多功能，我们一般使用lead即可。ros是收费商业软件，稳定性和性能据说不错，不过无法拓展功能。voxy也是开源软件，但也无法拓展。lede编译比较复杂，依赖很多，我们可以使用现成的docker来编译，方便很多。 ","date":"2020-11-01","objectID":"/gen8-1/:6:0","tags":["vps","gen8"],"title":"Gen8设置","uri":"/gen8-1/"},{"categories":["linux"],"content":" 根据维基百科，Wayland是一个通信协议，规定了显示服务器与其客户机之间的通信方式，而使用这个协议的显示服务器称为Wayland Compositor。是不是很不好理解，我们只需知道它可以代替xorg就可以了。sway是wayland上的Title Compositor，类似于xorg下的i3，设置基本相同，使用快捷键操作。以下设置主要参考archlinux wiki。 ","date":"2020-10-29","objectID":"/wayland/:0:0","tags":["arch","wayland"],"title":"使用Wayland和sway","uri":"/wayland/"},{"categories":["linux"],"content":"wayland和sway安装 安装 sudo pacman -S wayland sway xorg-server-xwayland 设置环境变量 与 Xorg不同，wayland 使用.pam_environment设置环境变量。 XDG_CURRENT_DESKTOP=Unity //桌面环境 LANG=zh_CN.UTF-8 //语言设置 INPUT_METHOD DEFAULT=fcitx //fcitx设置 GTK_IM_MODULE DEFAULT=fcitx QT_IM_MODULE DEFAULT=fcitx XMODIFIERS DEFAULT=\\@im=fcitx GDK_DPI_SCALE=1.65 //hidpi 设置 ","date":"2020-10-29","objectID":"/wayland/:1:0","tags":["arch","wayland"],"title":"使用Wayland和sway","uri":"/wayland/"},{"categories":["linux"],"content":"sway 设置 终端设置 set $term urxvtc bemenu 设置 wayland使用bemenu快速启动程序 set $menu dmenu_path | dmenu | xargs swaymsg exec bemenu -b 护眼程序redshift exec \"urxvtc -e nohup redshift 2\u003e\u00261\" 输出背景和分辨率 output eDP-1 { background ~/Downloads/2.jpg fill resolution 1920x1080 } 屏保 exec swayidle -w \\ timeout 300 'swaylock -f -c 000000' \\ timeout 600 'swaymsg \"output * dpms off\"' resume 'swaymsg \"output * dpm s on\"' \\ before-sleep 'swaylock -f -c 000000' 程序快捷键绑定 bindsym $mod+d exec \"wofi --show run\" bindsym $mod+Shift+f exec \"kitty -e ranger\" 缺省颜色 set $bgcolor #00000033 set $ibgcolor #4c7899 set $fws #00000080 set $barcolor #0000000D set $textcolor #ffffff set $itextcolor #969696 set $ubgcolor #ff0000 # border backgroud text indicate client.focused $bgcolor $bgcolor $textcolor $bgcolor client.unfocused $ibgcolor $ibgcolor $itextcolor $ibgcolor client.focused_inactive $ibgcolor $ibgcolor $itextcolor $ibgcolor client.urgent $ubgcolor $ubgcolor $textcolor $ubgcolor i3status 状态栏 bar { position top font pango:Font Awesome 5 Free 16 icon_theme Adwaita # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done status_command i3status colors { background $barcolor separator $barcolor focused_workspace $fws $fws $textcolor active_workspace $bgcolor $bgcolor $textcolor inactive_workspace $ibgcolor $ibgcolor $itextcolor } } 声音背光调节快捷键 bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 2%+ #increase sound volume bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 2%- #decrease sound volume bindsym XF86AudioMute exec amixer -D pulse sset Master toggle # mute sound bindsym XF86MonBrightnessUp exec brightnessctl -c backlight s 5%+ bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%- 注意 先安装brighjtnessctl用于背光调节。 窗口间隙 gaps inner 5 gaps outer 5 smart_gaps on 指定特定程序窗口 bindsym $mod+x exec google-chrome-stable for_window [instance=google-chrome] move container to workspace number 2 设置关机锁屏等快捷键 set $Locker \"swaylock -f -c 000000\" set $mode_system System (l) lock, (s) suspend, (h) hibernate, (r) reboot, (Shift +s) shutdown mode \"$mode_system\" { bindsym l exec --no-startup-id $Locker # bindsym e exec --no-startup-id i3-msg exit, mode \"default\" bindsym s exec --no-startup-id $Locker \u0026\u0026 systemctl suspend, mode \"default\" bindsym h exec --no-startup-id $Locker \u0026\u0026 systemctl hibernate, mode \"default \" bindsym r exec --no-startup-id systemctl reboot, mode \"default\" bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode \"default\" # back to normal: Enter or Escape bindsym Return mode \"default\" bindsym Escape mode \"default\" } bindsym $mod+Shift+q mode \"$mode_system\"a 设置边框取消标题栏 default_border pixel 1 设置键盘 参照github设置thinkpad X1键盘。 input * { xkb_layout \"us\" xkb_variant \"\" xkb_options \"\" } input \u003cidentifier\u003e xkb_model \"x1carbon\" chrome全屏取消锁屏 for_window [instance=google-chrome] inhibit_idle fullscreen ","date":"2020-10-29","objectID":"/wayland/:2:0","tags":["arch","wayland"],"title":"使用Wayland和sway","uri":"/wayland/"},{"categories":["linux"],"content":"登录管理器 登录管理器我选择greetd+tuigreet，非常小巧灵活的终端登陆器。 安装 yay - S greetd greetd-tuigreet 设置 /etc/greetd/config.timl [default_session] command = \"tuigreet --cmd sway\" ","date":"2020-10-29","objectID":"/wayland/:3:0","tags":["arch","wayland"],"title":"使用Wayland和sway","uri":"/wayland/"},{"categories":["linux"],"content":" hugo是快速的静态博客系统，可部署于github。我选择的是LoveIt主题,当然even也是很好的主题，但更适合文字博客，偏技术类博客loveit更现代，更适合。loveit功能很全，评论，搜索简单设置开箱即用，比较方便，设置文档也比较丰富。 ","date":"2020-10-29","objectID":"/hugo/:0:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":"安装hugo archlinux下安装hugo非常简单，只需一条命令，一个文件。 sudo pacman -S hugo ","date":"2020-10-29","objectID":"/hugo/:1:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":"配置hugo 建立博客 使用hugo建立名为blog的本地博客。 hugo new site blog 选择主题并编辑config 进入blog目录，初始化git，下载主题，可以使用github的submodule功能添加你喜欢的主题。下面以LoveIt主题为例，一般主题设置可以copy主题目录内 examplesite内内容到blog下使用。比较重要的是config.coml内设置。 cd blog git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 建文章并编译 不同主题要求的位置不同，需要注意，这点可以参照主题说明。 hugo new posts/\u003c文章名\u003e.md hugo 本地测试 hugo serve --buildDrafts ","date":"2020-10-29","objectID":"/hugo/:2:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":"使用gihub管理blog和文章 我们需要建立两个repo，分别用于文章管理和博客发布。其中博客发布我使用的是建立\u003c用户名\u003e.github.io，相对比较简单。 cd publc git init git remote add \u003c用于发布的repo地址\u003e git -u orgin push rm -rf public git submodule add \u003c用于发布的repo地址\u003e public 在blog根目录下建立depoly.sh。 #!/bin/sh # If a command fails then the deploy stops set -e # Print out commands before executing them set -x printf \"\\033[0;32mDeploying updates to GitHub...\\033[ 0m\\n\" # Build the project. hugo # Go To Public folder cd public # Add changes to git. git add . # Commit changes. msg=\"rebuilding site $(date)\" if [ -n \"$*\" ]; then msg=\"$*\" fi git commit -m \"$# Push source and build repos. git push origin master # Back to the origin folder # cd .. # rm -rf public blog目录下submodudle初始化 git submodule init 至此设置基本完成，如需上传文章需在blog下执行： git add . git commit \"\" git push -u origin master 如需更新博客，需提前为的deploy.sh增加可运行属性： chmod +x deploy.sh ./deploy.sh ","date":"2020-10-29","objectID":"/hugo/:3:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":"LoveIt设置 编辑config.coml, 设置baseURL中文显示 baseURL = \"https://gihub博客repo/\" defaultContentLanguage = \"zh-cn\" 设置header.title logo = \"/images/kiss-wink-heart-regular.svg 此svg可从awesome font网站下载放入images目录。 ","date":"2020-10-29","objectID":"/hugo/:4:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":"其他机器使用 git clone \u003c文章管理repo\u003e blog cd blog git submodule init git submodule update cd public git checkout master cd .. cd themes/LoveIt git checkout master ","date":"2020-10-29","objectID":"/hugo/:5:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":"配置自己域名 设置域名CNAME 在域名管理页面设置域名CNAME指向你的博客eopo。 设置博客repo 在博客仓库设置页面custom domain处填入你的域名，可勾选下面enforce HTTPS。 ","date":"2020-10-29","objectID":"/hugo/:6:0","tags":["vps"],"title":"VPS配置之六hugo","uri":"/hugo/"},{"categories":["linux"],"content":" 为便于VPS管理设置，我们需要开启SSH，安全起见，SSH需要在/etc/ssh/sshd_config中进行以下设置。 ","date":"2020-10-27","objectID":"/ssh/:0:0","tags":["vps"],"title":"VPS配置之五SSH","uri":"/ssh/"},{"categories":["linux"],"content":"在服务器端设置 禁止root用户登录，找到PermitRootLogin yes改为no 禁止密码登录，找到PasswordAuthentication yes，改为no。 改变缺省端口，找到Port 22改为其他端口 ","date":"2020-10-27","objectID":"/ssh/:1:0","tags":["vps"],"title":"VPS配置之五SSH","uri":"/ssh/"},{"categories":["linux"],"content":"在客户端设置 使用ssh-keygen生成key 默认保存于.ssh目录中,id_rsa 为私钥，id_rsa.pub 为公钥。。 ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/home/p3terx/.ssh/id_rsa): Created directory '/home/p3terx/.ssh'. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/p3terx/.ssh/id_rsa. Your public key has been saved in /home/p3terx/.ssh/id_rsa.pub. The key fingerprint is: SHA256:qssp3ZnX0bgxbSUOlecZllcDAjX4nqjL3hA/HRtoGd8 p3terx@hk2 The key's randomart image is: +---[RSA 2048]----+ | .++ o.oo| | . = = o| | ... + + | | *.o + | | .S+oX.E | | .+.*oO | | . ..+.+ O | | ...o=.+ + | | .=..=.. | +----[SHA256]-----+ 使用ssh-copy-id上传公钥 ssh-copy-id -i ~/.ssh/id_rsa.pub -p Port User@HostName 注意 ssh-copy-id 命令相当于执行了以下复杂的手动操作： 复制公钥文件中的内容 cat ~/.ssh/id_rsa.pub 登录到远程主机 ssh User@HostName -p Port 创建 ~/.ssh 目录 mkdir -p ~/.ssh 把公钥文件写入到 ~/.ssh/authorized_keys vim ~/.ssh/authorized_keys 设置权限 chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys 使用ssh-key登录 ssh -p Port User@HostName ","date":"2020-10-27","objectID":"/ssh/:2:0","tags":["vps"],"title":"VPS配置之五SSH","uri":"/ssh/"},{"categories":["linux"],"content":" nginx是常用服务器软件之一，高效，快速。我们的VPS需要它来建立网站、通过反向代理使用各种服务。从稳定性考虑，我的VPS使用Centos 7操作系统，网上资源也很丰富，便于搜索学习。 ","date":"2020-10-27","objectID":"/nginx/:0:0","tags":["vps"],"title":"VPS配置之二Nginx","uri":"/nginx/"},{"categories":["linux"],"content":"安装nginx 安装EPEL仓库 sudo yum install epel-release 安装nginx sudo yum install nginx 启动nginx sudo systemctl start nginx sudo systemctl enable nginx 设置防火墙 sudo firewall-cmd --permanent --zone=public --add-service=http sudo firewall-cmd --permanent --zone=public --add-service=https sudo firewall-cmd --reload ","date":"2020-10-27","objectID":"/nginx/:1:0","tags":["vps"],"title":"VPS配置之二Nginx","uri":"/nginx/"},{"categories":["linux"],"content":"设置nginx 查看nginx设置文件位置。 sudo nginx -t filebrowser反向代理 resolver 8.8.8.8; upstream filebrowser { server 你的网站IP:7000; } server { listen 80 default_server; server_name 你的网站地址; location / { client_max_body_size 1024m; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forward-For $proxy_add_x_forwarded_for; proxy_pass http://filebrowser; } } frps反向代理 server { listen 80; server_name *.yourdomain.com; return 301 https://$host$request_uri; } server { listen 443 ssl http2; server_name *.yourdomain.com; ssl_certificate /usr/local/nginx/conf/ssl/yourdomain.com.crt; ssl_certificate_key /usr/local/nginx/conf/ssl/yourdomain.com.key; client_max_body_size 50m; client_body_buffer_size 256k; client_header_timeout 3m; client_body_timeout 3m; send_timeout 3m; proxy_connect_timeout 300s; proxy_read_timeout 300s; proxy_send_timeout 300s; proxy_buffer_size 64k; proxy_buffers 4 32k; proxy_busy_buffers_size 64k; proxy_temp_file_write_size 64k; proxy_ignore_client_abort on; location / { proxy_pass http://127.0.0.1:1234; //frps vhost port proxy_redirect off; proxy_set_header Host $host:80; proxy_ssl_server_name on; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } ","date":"2020-10-27","objectID":"/nginx/:2:0","tags":["vps"],"title":"VPS配置之二Nginx","uri":"/nginx/"},{"categories":["linux"],"content":" Acme能做什么？ acme.sh可以从 let‘s encrypt（数字证书认证机构）生成免费的证书。并且可以自动化完成创建证书、安装证书、更新证书。 ","date":"2020-10-25","objectID":"/acme/:0:0","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"安装acme curl https://get.acme.sh | sh 创建一个bash的别名, 方便使用: alias acme.sh=~/.acme.sh/acme.sh ","date":"2020-10-25","objectID":"/acme/:1:0","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"生成证书 生成证书需要验证你的域名所有权。acme.sh 实现了 acme 协议支持的所有验证协议，一般有 http 和 dns 两种验证方式。 这里介绍几种常用的验证方式。 ","date":"2020-10-25","objectID":"/acme/:2:0","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"Webroot mode: 如果已经运行了web服务器，可以指定网站的根目录使用 Webroot 模式生成证书。acme.sh 会自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会自行删除验证文件。 acme.sh --issue -d example.com -w /home/wwwroot/example.com ","date":"2020-10-25","objectID":"/acme/:2:1","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"Standalone mode: 如果没有Web服务器，且80端口是空闲的，可以使用独立模式。acme.sh会用内置的独立网络服务器，监听80端口进行验证以颁发证书。 acme.sh --issue -d example.com --standalone ","date":"2020-10-25","objectID":"/acme/:2:2","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"Nginx mode: 如果使用 nginx 服务器可以自动从 nginx 配置中完成验证。 acme.sh --issue -d example.com --nginx ","date":"2020-10-25","objectID":"/acme/:2:3","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"安装证书 生成的证书默认放在 acme.sh 的安装目录下，不应该直接使用该目录下的文件，因为这里面的文件都是内部使用, 而且目录结构可能会发生变化。 可以使用 –install-cert 命令安装证书，把证书copy到相应的位置。 比如 nginx: acme.sh --install-cert -d example.com \\ --key-file /path/to/keyfile/in/nginx/cert.key \\ --fullchain-file /path/to/fullchain/nginx/cert.pem \\ --reloadcmd \"service nginx force-reload\" 跟上的 –reloadcmd 命令，是指定重新加载服务器的命令，证书安装成功或自动更新之后会重新加载服务使新证书生效。 ","date":"2020-10-25","objectID":"/acme/:3:0","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"更新证书 目前通过 acme.sh 生成的证书会在60天过期，那怎么更新证书呢？ ","date":"2020-10-25","objectID":"/acme/:4:0","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"手动更新 acme.sh --renew -d example.com --force ","date":"2020-10-25","objectID":"/acme/:4:1","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"自动更新 安装 acme.sh 时会自动创建一个 cronjob，每天定期检查所有证书，如果证书需要更新会自动更新证书。 通过 crontab -l 查看 crontab 任务: 46 0 * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" \u003e /dev/null ","date":"2020-10-25","objectID":"/acme/:4:2","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":"更新acme 由于 acme 协议和 letsencrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步。 acme.sh --upgrade 保持自动升级。 acme.sh --upgrade --auto-upgrade ","date":"2020-10-25","objectID":"/acme/:5:0","tags":["acme","vps"],"title":"VPS配置之一使用acme申请证书","uri":"/acme/"},{"categories":["linux"],"content":" archlinux 安装配置的文章网上很多，大多涉及源设置，输入法，字体美化，终端设置等等，但仍有很多细节缺失，为此将自己完善Thinkpad X1 carbon 7th 的过程简要记录备忘。 ","date":"2020-10-22","objectID":"/arch-2/:0:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"BIOS 设置 禁止 “Secure Boot” Security -\u003e Secure Boot - Set to “Disabled”. 节能 禁止 Config -\u003e Thunderbolt BIOS Assist Mode - Set to “Enabled” 休眠模式 Config -\u003e Power -\u003e Sleep State 引用自archlinux wiki ","date":"2020-10-22","objectID":"/arch-2/:1:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"安装网卡驱动 broadcom-wl-dkms，每次升级内核后，都自动安装。 ","date":"2020-10-22","objectID":"/arch-2/:2:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"音质提升 ","date":"2020-10-22","objectID":"/arch-2/:3:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"设置pulseaudio 编辑 ~/.config/pulse/daemon.conf default-sample-format = float32le default-sample-rate = 48000 alternate-sample-rate = 44100 default-sample-channels = 4 default-channel-map = front-left,front-right,rear-left,rear-right resample-method = soxr-vhq enable-lfe-remixing = no high-priority = yes nice-level = -11 realtime-scheduling = yes realtime-priority = 9 rlimit-rtprio = 9 daemonize = no ","date":"2020-10-22","objectID":"/arch-2/:3:1","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"设置ALSA 编辑 ~/.asoundrc pcm!default { type plug slave.pcm hw } ","date":"2020-10-22","objectID":"/arch-2/:3:2","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"SSD开启trim sudo systemctl enable fstrim.timer sudo systemctl start fstrim.service ","date":"2020-10-22","objectID":"/arch-2/:4:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"升级固件版本 安装fwupd sudo fwupdmgr update ","date":"2020-10-22","objectID":"/arch-2/:5:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"BOSS Q35 蓝牙连接 ","date":"2020-10-22","objectID":"/arch-2/:6:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"设置 编辑 vim /etc/bluetooth/main.conf # ControllerMode = dual改为ControllerMode = bredr，重启bluetooth服务。 ","date":"2020-10-22","objectID":"/arch-2/:6:1","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"音质提升 pacmd set-card-profile 1 a2dp_sink ","date":"2020-10-22","objectID":"/arch-2/:6:2","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"dock 安装plank，将状态栏放于顶部 ","date":"2020-10-22","objectID":"/arch-2/:7:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":"全局菜单 vala-appmenu ","date":"2020-10-22","objectID":"/arch-2/:8:0","tags":["archlinux"],"title":"Archlinux 优化之二","uri":"/arch-2/"},{"categories":["linux"],"content":" archliux是一个滚动更新的linux发行版，它有庞大软件库和最新的系统，适合尝鲜使用.事实上你只要经常更新，它也是比较稳定的。我曾使用过manjaro，安装确实省事。但你无法完全控制，不适用我这样追求完美注意的人，gentoo又似乎太麻烦，为了那一点性能提高，好像也划不来。所以我还是使用archlinux，定制性强又不失快速。自从使用EFI STUB启动后，BiOS自检完，进入登录画面只需1秒多，可以说是飞速。使用wayland加sway和xammod内核进入系统内存占用不到300M，我已经满意了。 ","date":"2020-10-22","objectID":"/arch-1/:0:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"bcm 4360 网卡驱动 archlinux 安装需联网。broadcom 4360 网卡需手动安装驱动，是安装前首先要做的。archlinux安装盘自带bcm4360驱动,不过缺省使用的b43quds，我们需要卸载后，加载wl驱动。 rmmod b43 ssb rmmod bcma modprober wl rmmod wl modprober wl ip link iwctl station wlan0 get-networks station wlan0 connect ** 技巧 如果加载wl模块后，仍无法找到无线网卡，可卸载重新加载一次 ","date":"2020-10-22","objectID":"/arch-1/:1:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"pgp密钥导入 部分yay软件需要pgp密钥，可使用代理添加。 proxychains gpg --keyserver keyserver.ubuntu.com --recv-keys ** ","date":"2020-10-22","objectID":"/arch-1/:2:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"临时增加 tmp大小 编译xanmod需要。 sudo mount -o remount,size=6G,noatime /tmp ","date":"2020-10-22","objectID":"/arch-1/:3:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"timeshift备份 使用timeshift可随时给系统做快照，实现增量备份。 sudo timeshift --list sudo timeshift --snapshot-device /dev/sdb4 sudo timeshift --restore --snapshot '2019-07-16_16-35-42' --skip-grub 注意 若无法进入系统，可使用manjaro安装盘启动，在终端中sudo timeshift，选择快照的恢复。 ","date":"2020-10-22","objectID":"/arch-1/:4:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"加快启动速度 关闭 watchdog。 ","date":"2020-10-22","objectID":"/arch-1/:5:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"安装 xanmod 内核 可以优化桌面反应速度，启动速度，减少内存占用。 yay -S linux-xanmod linux-xanmod-header --editmenu grub-mkconfig -o /boot/grub/grub.cfg 技巧 可以通过编辑PKGBUILD文件，将其中_microarchitectrue=0改为自己的CPU类型，来简单优化一下。CPU类型缺省会在编译过程中提示，如没有自己cpu类型，可以选择最接近的。 如想使用cachy调度器，需要在PKGBUULD文件中将cachy=no改为yes。 如需自定义kernel编译内容，可在PKGBUILD文件build内加入make menuconfig。 如需精简内核，可插上所有使用的硬件、打开所需服务后，在PKGBUILD中build内加入make localmodconfig。使用后最大的变化就是编译时间和内核大小大为减少，我的机器xanmod内核编译时间由近1小时减少到10份分钟，非常明显，缺点是如需增加新硬件需重新编译。 ","date":"2020-10-22","objectID":"/arch-1/:6:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"EFI STUB 启动 可使用EFI STUB加快启动速度。 注意 若使用EFI STUB, 安装时需将EFI安装到boot分区。请将part换为自己的BOOT分区，将UUID改为自己BOOT分区。 sudo efibootmgr --disk /dev/nvme0n1 --part 1 --create --label \"Arch\" --loader /vmlinuz-linux-xanmod --unicode 'root=UUID=0f949b62-98bf-4787-b8b9-1f21d0889691 rw initrd=\\initramfs-linux-xanmod.img loglevel=3 quiet nowatchdog' ","date":"2020-10-22","objectID":"/arch-1/:7:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"清理 清理孤立包 sudo pacman -Rns $(pacman -Qtdq) 设置日志大小 journalctl --vacuum-size=50M 清理pacman缓存 慎用sudo pacman -Scc暴力清理，可以安装pacman-contrib包使用paccache清理。paccache清理缺省保留最近3次的升级的软件包，方便今后降级，而且通过参数可以控制清理内容。如paccache -d可以先查看删除内容,paccache -r删除缓冲包，paccahche -rk1删除最近一次升级外缓存包等等。 ","date":"2020-10-22","objectID":"/arch-1/:8:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":["linux"],"content":"makepkg速度优化 新建 ~/.makepkg.conf, 写入如下内容，优化生成的二进制文件， 加快编译速度， 加快软件包生成速度。 CFLAGS=\"-march=native -O2 -pipe -fno-plt\" CXXFLAGS=\"-march=native -O2 -pipe -fno-plt\" MAKEFLAGS=\"-j$(nproc)\" BUILDENV=(!distcc color ccache !check !sign) BUILDDIR=/tmp/makepkg COMPRESSXZ=(xz -c -z - --threads=0) ","date":"2020-10-22","objectID":"/arch-1/:9:0","tags":["archlinux"],"title":"Archlinux 优化之一","uri":"/arch-1/"},{"categories":null,"content":"title: “Gfw” date: 2020-12-28T16:35:59+08:00 categories : [“linux”] tags : [“vps”] draft: true ssl /usr/local/ssl/tiantian.crt tiantian.key ssl 证书 trojan ‘sudo bash -c “$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)\"' ‘/usr/local/etc/trojan/config.json’ '’’ { “run_type”: “server”, “local_addr”: “0.0.0.0”, “local_port”: 443, “remote_addr”: “127.0.0.1”, “remote_port”: 80, “password”: [ “password1”, “password2” ], “log_level”: 1, “ssl”: { “cert”: “/path/to/certificate.crt”, “key”: “/path/to/private.key”, “key_password”: “\", “cipher”: “ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384”, “cipher_tls13”: “TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384”, “prefer_server_cipher”: true, “alpn”: [ “http/1.1” ], “reuse_session”: true, “session_ticket”: false, “session_timeout”: 600, “plain_http_response”: “\", “curves”: “\", “dhparam”: \"” }, “tcp”: { “prefer_ipv4”: false, “no_delay”: true, “keep_alive”: true, “reuse_port”: false, “fast_open”: false, “fast_open_qlen”: 20 }, “mysql”: { “enabled”: false, “server_addr”: “127.0.0.1”, “server_port”: 3306, “database”: “trojan”, “username”: “trojan”, “password”: “\", “key”: “\", “cert”: “\", “ca”: \"” } } '’’ trojan-go '’’ wget https://github.com/p4gefau1t/trojan-go/releases/download/v0.5.1/trojan-go-linux-amd64.zip unzip -o trojan-go-linux-amd64.zip -d /usr/local/bin/trojan-go/trojan-go rm trojan-go-linux-amd64.zip '’’ ‘vim /etc/systemd/system/trojan-go.service’ '’’ [Unit] Description=Trojan-Go After=network.target nss-lookup.target Wants=network-online.target [Service] Type=simple User=root ExecStart=/usr/local/bin/trojan-go/trojan-go -config /usr/local/etc/trojan-go/config.json Restart=on-failure RestartSec=15 [Install] WantedBy=multi-user.target '’’ ‘systemctl enable trojan-go’ '’’ mkdir -p /usr/local/etc/trojan-go vim /usr/local/etc/trojan-go/config.json '’’ '’’ { “run_type”: “server”, “local_addr”: “0.0.0.0”, “local_port”: 443, “remote_addr”: “127.0.0.1”, “remote_port”: 80, “password”: [ “fuckgfw” ], “ssl”: { “cert”: “/etc/ssl/certs/example.com.cer”, “key”: “/etc/ssl/certs/example.com.key”, “sni”: “example.com” }, “router”:{ “enabled”: true, “block”: [ “geoip:private” ] } } '’’ ‘./trojan-go -config config.json’ Cloudflare 设置 将域名的 Namesever 指向 Cloudflare 所提供的地址，等待生效 NS 记录更新后，将 Cloudflare 中域名的 A 记录指向服务器 IP，确保云朵为橙色（Proxied） 在 SSL/TLS 版块中的 Overview 里，将加密模式调整为 Full (strict) 在 SSL/TLS 版块中的 Edge Certificates 里，将 Minimum TLS Version 调整为 TLS 1.3，并在下方确保开启对 TLS 1.3 的支持 在 Firewall 版块中的 Firewall Rules 里，添加一个规则，允许 /random 路径的访问（Allow URI path） 在 Cloudflare 上获取域名的 Zone ID，记录之 在 Cloudflare 的 My Profile 中生成一个 API Token，权限为 Zone Zone Read 和 Zone DNS Edit，Zone Resources 特指区域为 example.com，完成后记下 Token 根据自己的需要在 Cloudflare 上进行其他设置（可选），例如配置 Always Use HTTPS、HSTS、Automatic HTTPS Rewrites、Auto Minify 等等，主要影响浏览器访问网站的效果 '’’ f1g1ns1.dnspod.net f1g1ns2.dnspod.net '’’ ‘d6f39e137d9e8e7355274680ed1e962e’ '’’ {“result”:{“id”:“9d6f1a4c7e2de89986478f1ed9c09428”,“status”:“active”},“success”:true,“errors”:[],“messages”:[{“code”:10000,“message”:“This API Token is valid and active”,“type”:null}]} '’’ xray root用户’bash \u003c(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh) install’ 使用VLESS over TCP with XTLS + 回落 \u0026 分流 to WHATEVER（终极配置） 配置’/usr/local/etc/xray/config.json‘。 '’’ { “log”: { “loglevel”: “warning” }, “inbounds”: [ { “port”: 443, “protocol”: “vless”, “settings”: { “clients”: [ { “id”: “\", // 填写你的 UUID “flow”: “xtls-rprx-direct”, “level”: 0, “email”: “love@example.com” } ], “decryption”: “none”, “fallbacks”: [ { “dest”: 1310, // 默认回落到 Xray 的 Trojan 协议 “xver”: 1 }, { “path”: “/websocket”, // 必须换成自定义的 PATH “dest”: 1234, “xver”: 1 }, { “path”: “/vmesstcp”, // 必须换成自定义的 PATH “dest”: 2345, “xver”: 1 }, { “path”: “/vmessws”, // 必须换成自定义的 PATH “dest”: 3456, “x","date":"0001-01-01","objectID":"/gfw/:1:0","tags":null,"title":"","uri":"/gfw/"}]